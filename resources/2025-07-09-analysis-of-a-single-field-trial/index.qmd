---
title: "Analysis of a single field trial"
author: "Emi Tanaka"
date: 2025/07/09
institute: Australian National University
execute:
  cache: true
format: 
  anu-light-revealjs:
    width: 1920
    height: 1080
    disable-layout: false
    auto-stretch: false
    html-math-method: katex
    css: [/assets/tachyons-addon.css]
---



## USYD Plant Breeding Institute, Narrabri, NSW, Australia

::: {.columns}
::: {.column width="50%"}

<br><br>

![[Image credit: Kieran Shephard](https://groundcover.grdc.com.au/innovation/climate/global-search-helps-heat-tolerance-gains-to-be-made-in-wheat)](images/harvesting.jpg){.ba}

:::

::: {.column width="50%"}

![Image credit: Melissa Eather](images/field.png){.ba}
:::
:::

## International Maize and Wheat Improvement Center (CIMMYT), Mexico

::: {.columns}
::: {.column width="50%"}

![](images/double-bed.png)

:::

::: {.column width="50%"}

![](images/double-bed-closeup.png)
:::
:::

::: aside

Images courtesy of Tony Fischer and Matthew Reynolds

:::




## Crop field trial for plant breeding

::: {.columns}
::: {.column width="50%"}

- An experiment with candidate (and check) genotypes as treatment
- Typically, 
  - plots laid out as a rectangular array 
  - plots have the same size
  - one genotype per plot
  - yield measured per plot
  - spatially contiguous areas are grouped as blocks for experimental design


:::

::: {.column width="50%"}


```{r}
#| message: false
#| cache: false
library(tidyverse)
library(cropscan)
theme_set(theme_bw(base_size = 18))
dat <- cropscan::trial_pheno |> 
  as_field()
plot_field_yield(dat) + labs(x = "Column", y = "Row", fill = "Yield (t/ha)") 
```

`r n_distinct(dat$gen)` genotypes, `r nrow(dat)` observations, 2 blocks

```{r}
#| fig-height: 4.8
plot_field(dat, fill = block, max_cat = 3) + labs(x = "Column", y = "Row", fill = "Block", caption = "Text label = genotype label") + geom_text(aes(label = gen))
```


:::
:::





## Glasshouse trials

- A glasshouse trial may also have similar structure, except plot = pot

![[The Plant Accelerator, Adelaide, Australia](https://www.plantphenomics.org.au/open-house-at-the-plant-accelerator)](images/img_0958-2.jpg)

## Take into account the experimental design

- Analysis should take into account any potential sources of variation used in the experimental design


::: {.columns}
::: {.column width="50%"}

![](images/13007_2012_Article_230_Fig7_HTML.jpeg){style="height:600px"}


:::

::: {.column width="50%"}

![](images/13007_2012_Article_230_Fig8_HTML.jpeg)

:::
:::

::: aside

Brien et al (2013) Accounting for variation in designing greenhouse experiments with special reference to greenhouses containing plants on conveyor systems. _Plant Methods_

:::

## Baseline model 


::: {.columns}
::: {.column width="50%"}

```{r}
plot_field_yield(dat) + labs(x = "Column", y = "Row", fill = "Yield (t/ha)")
```


```{r}
#| fig-height: 4.8
plot_field(dat, fill = block, max_cat = 3) + labs(x = "Column", y = "Row", fill = "Block", caption = "Text label = genotype label") + geom_text(aes(label = gen))
```

:::

::: {.column width="50%" .f3}



```{r}
#| echo: true
#| eval: false
# Warning: packages below are in active development
pak::pak("emitanaka/cropscan") 
pak::pak("emitanaka/broom.asreml")
```

We'll use `asreml` to fit linear mixed models.

```{r}
#| echo: true
#| message: false
#| output: false
library(asreml)
# genotype as fixed effect, block as random effect
fit_basef <- asreml(yield ~ gen, 
                    random =~ block, 
                    data = cropscan::trial_pheno)

# genotype as random effect, block as random effect
fit_baser <- asreml(yield ~ 1, 
                    random =~ gen + block, 
                    data = cropscan::trial_pheno)
```

And `broom.asreml` to extract model values in a tidy way.

```{r}
#| echo: true
library(broom.asreml)
tidy(fit_basef, "varcomp")
# tidy(fitf, "fixed")
# tidy(fitf, "random")
```


:::
:::



## Peripheral effects

- Management operations often conducted in a serpentine fashion.

::: {.columns}
::: {.column width="30%"}

![](images/field_harvest.gif)

:::

::: {.column width="30%"}


![](images/field_spray.gif)

:::


::: {.column width="40%"}


:::

:::


. . . 

- Are plots completely independent?



## Spatial modelling for local trend & extraenous variation


```{r}
#| echo: true
#| output: false
fit_ar1xar1 <- asreml(yield ~ gen, 
                      random =~ block + units + rowf + colf, 
                      residual =~ ar1(colf):ar1(rowf),
                      data = cropscan::trial_pheno)
```

- Note: `units` is a specially reserved term in `asreml` that is uniquely identifies each observational unit, i.e. `factor(1:nrow(data))`.
- In this `units` is used to create the nugget effects.

```{r}
#| echo: true
tidy(fit_ar1xar1, "varcomp")
```

## Why AR1 $\times$ AR1?

```{r}
#| echo: true
#| code-line-numbers: false
#| eval: false
residual =~ ar1(colf):ar1(rowf)
```


::: f2

$$\sigma^2\begin{bmatrix}1 & \rho_c & \rho^2_c &\cdots &\rho_c^{C-1}\\\rho_c &1& \rho_c&\ddots&\rho_c^{C-2}\\\rho_c^2 & \rho_c & 1 &\ddots&\rho_c^{C-3}\\\vdots & \ddots & \ddots & \ddots & \vdots \\ \rho_c^{C-1} & \rho_c^{C-2} & \rho_c^{C-3} & \cdots & 1\end{bmatrix}\otimes\begin{bmatrix}1 & \rho_r & \rho^2_r &\cdots &\rho_r^{R-1}\\\rho_r &1& \rho_r&\ddots&\rho_r^{R-2}\\\rho_r^2 & \rho_r & 1 &\ddots&\rho_r^{R-3}\\\vdots & \ddots & \ddots & \ddots & \vdots \\ \rho_r^{R-1} & \rho_r^{R-2} & \rho_r^{R-3} & \cdots & 1\end{bmatrix}$$
:::


- Low additional number of parameters (three) to estimate but yet the structure is flexible and anisotropic (correlation in all directions can be different).
- For positive autocorrelation, the structure captures the general idea that the plots that are geographically close together are more similar.
- The AR1 $\times$ AR1 structure generally fits well in practice.


::: aside

Gilmour et al. (1997) “Accounting for Natural and Extraneous Variation in the Analysis of Field Experiments,” Journal of Agricultural, Biological, and Environmental Statistics.


:::


## Other separable processes


- If you don't believe that plots are similar in say a row direction then you can model such that the plots are uncorrelated in row direction.



```{r}
#| echo: true
#| output: false
fit_ar1xid <- asreml(yield ~ gen, 
                     random =~ block + units + rowf + colf, 
                     residual =~ ar1(colf):id(rowf),
                     data = cropscan::trial_pheno)
```


$$\sigma^2\begin{bmatrix}1 & \rho_c & \rho^2_c &\cdots &\rho_c^{C-1}\\\rho_c &1& \rho_c&\ddots&\rho_c^{C-2}\\\rho_c^2 & \rho_c & 1 &\ddots&\rho_c^{C-3}\\\vdots & \ddots & \ddots & \ddots & \vdots \\ \rho_c^{C-1} & \rho_c^{C-2} & \rho_c^{C-3} & \cdots & 1\end{bmatrix}\otimes\mathbf{I}_R$$

## Comparing nested random models 

- If fixed effects are the same and you have nested random models, then you can use the likelihood ratio test to compare models.
- Below suggests that $H_0: \rho_r = 0$ is rejected <br>(so AR1$\times$AR1 model is better than AR1$\times$ID model).


```{r}
#| echo: true
lrt(fit_ar1xar1, fit_ar1xid)
```

## Residual plot


```{r}
#| echo: true
augment(fit_ar1xar1) |> 
  ggplot(aes(.fitted, .resid)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point()
```

. . . 


- Typical residual plots may fail you for model diagnostics.


## Residual plot by row


```{r}
#| echo: true
#| fig-height: 10
#| output-location: column
augment(fit_ar1xar1) |> 
  ggplot(aes(colf, .resid)) +
  geom_hline(yintercept = 0, 
             linetype = "dashed") +
  geom_point() +
  geom_smooth(aes(group = rowf)) + 
  facet_wrap(~rowf, 
             label = label_both)
```

## Smooth global trend 

- Smooth global trend is incorporated using **cubic smoothing spline** indexed by the column number.


```{r}
#| echo: true
#| output: false
fit_spl <- asreml(yield ~ gen + lcol, 
                  random =~ block + units + rowf + colf + spl(lcol), 
                  residual =~ ar1(colf):id(rowf),
                  data = cropscan::trial_pheno)
```

::: aside


Verbyla et al (1999) “The analysis of designed experiments and longitudinal data by using smoothing splines,” Journal of the Royal Statistical Society. Series C (Applied Statistics)

:::



## Sample variograms for residuals


::: {.columns}
::: {.column width="50%"}

![](images/vario.png)


Sample variogram is made of:


![](images/samplevario.png)

:::

::: {.column width="50%"}


- Variogram is a popular method to detect spatial dependence.
- The idea here is that if we have modelled the spatial dependence appropriately in the model, the residuals should not exhibit any spatial dependence.
- In theory, variogram will start with (0,0) and if no spatial dependence is exhibited then it should flatten out.
- In practice, there is high variability for sample variogram of plots furthest away due to less information so it may not be as flat as you like.

:::
:::



## Model diagnostics with variograms

::: {.columns}
::: {.column width="50%"}

```{r}
#| echo: true
#| fig-height: 8
varioGram(fit_spl) |> 
  ggplot(aes(rowf, gamma)) +
  geom_line() +
  facet_wrap(~colf)
```


:::

::: {.column width="50%"}

```{r}
#| echo: true
#| fig-height: 8
varioGram(fit_spl) |> 
  ggplot(aes(colf, gamma)) +
  geom_line() +
  facet_wrap(~rowf)
```

:::
:::

## Genotypes are often not unrelated 

::: {.columns}
::: {.column width="35%"}

![](images/pedigree.png){width="100%"}

:::

::: {.column width="65%"}

```{r}
#| echo: true
ped <- data.frame(me=paste0("I", c(1:11, 13)),
                  mum=c(0, 0, 0, 0, "I1", "I1", "I1", "I2", "I3", "I5", "I7", "I9"),
                  dad=c(0, 0,0, 0, "I2", "I2", "I3", "I3", "I4", "I6", "I8", "I9"),
                  fgen=c(rep(0, 11), 2))

ped
```

:::
:::





```{r}
#| eval: false
library(visNetwork)
nodes <- tibble(id = 1:13)
edges <- tribble(~from, ~to,
                 1, 5,
                 1, 6, 
                 1, 7,
                 2, 5, 
                 2, 6,
                 2, 8,
                 3, 7, 
                 3, 8, 
                 3, 9, 
                 4, 9,
                 5, 10,
                 6, 10,
                 7, 11, 
                 8, 11, 
                 9, 12,
                 12, 13)

visNetwork(nodes, edges) |> 
  visEdges(arrows = "from") |> 
  visHierarchicalLayout(direction = "DU") 
```


## Numerator relationship matrix 


The $\mathbf{A}$ matrix is a square matrix that represents the additive genetic relationships between individuals in a population.


::: {.columns}
::: {.column width="15%"}

![](images/pedigree.png){width="100%"}

:::

::: {.column width="85%"}

::: f2

```{r}
ainverse(ped, fgen = list("fgen", 0)) |> 
  sp2mat() |> 
  solve() |> 
  as.data.frame() |> 
  mutate(across(everything(), ~kableExtra::cell_spec(scales::comma(.x, 0.001), background = ifelse(abs(.x) < 1e-6, "yellow", "white")))) |> 
  knitr::kable(digits = 3) 
```

:::
:::
:::


## $\mathbf{A}^{-1}$

::: {.columns}
::: {.column width="40%"}

```{r}
#| echo: true
cropscan::met_pedigree
```


:::

::: {.column width="60%"}


```{r}
#| echo: true
Ainv <- ainverse(cropscan::met_pedigree, fgen = list("fgen", 0))
Ainv
```

:::
:::





::: aside

Meuwissen and Luo (1992) Computing inbreeding coefficients in large populations. Genetics Selection Evolution

:::


## Modelling additive and non-additive genetic effects


$$\boldsymbol{y} = \boldsymbol{1}_{RC}\cdot \mu + \mathbf{Z}_g\boldsymbol{u}_a + \mathbf{Z}_g\boldsymbol{u}_{\bar{a}} + \boldsymbol{e}$$
$$\begin{bmatrix}\boldsymbol{u}_a\\\boldsymbol{u}_{\bar{a}}\\\boldsymbol{e}\end{bmatrix}\sim N\left(\begin{bmatrix}\boldsymbol{0}\\\boldsymbol{0}\\\boldsymbol{0}\end{bmatrix}, \begin{bmatrix}\sigma^2_a\mathbf{A} & \mathbf{0} & \mathbf{0}\\\mathbf{0} &\sigma^2_{\bar{a}}\mathbf{I}_G & \mathbf{0}\\\mathbf{0} & \mathbf{0} & \sigma^2\mathbf{I}_{RC}\end{bmatrix}\right)$$


```{r}
#| echo: true
#| output: false
fit_nrm <- asreml(yield ~ 1, 
                  random =~ vm(gen, Ainv) + ide(gen), 
                  data = cropscan::trial_pheno)
```

## Heritability

- **Broad-sense heritability** ($H^2$) estimates the proportion of phenotypic variation in a trait that is attributable to all genetic factors, including additive, dominant, and epistatic effects. 
- **Narrow sense heritability** ($h^2$) refers to the proportion of phenotypic variance in a trait that is due to additive genetic variance.

```{r}
#| echo: true
tidy(fit_nrm, "varcomp")
```
- A naive estimate of narrow-sense heritability is 0.0125/(0.0311 + 0.0125 + 0.229) = `r 0.0125/(0.0311 + 0.0125 + 0.229)`



## Estimated breeding values 

- EBV is a measure of the breeding potential of an individual for a specific trait
- You can obtain EBV as the E-BLUP (empirical best linear unbiased predictor) of $\boldsymbol{u}_a$

```{r}
#| echo: true
ebv_nrm <- tidy(fit_nrm, "random") |> 
  filter(str_detect(term, "^vm[(]gen, Ainv[)]")) |> 
  mutate(gen = str_remove(term, "^vm[(]gen, Ainv[)]_")) |> 
  filter(gen %in% cropscan::trial_pheno$gen) |> 
  select(-term)

ebv_nrm
```


## EBV vs Raw Yield

```{r}
#| fig-height: 8
#| echo: true
#| output-location: column
cropscan::trial_pheno |> 
  left_join(ebv_nrm, by = "gen") |> 
  ggplot(aes(estimate, yield)) +
  geom_point(aes(alpha = -std.error), size = 4) + 
  geom_smooth() + 
  guides(alpha = "none") +
  labs(x = "EBV", y = "Yield")
```




## DNA markers
```{r}
options(width = 70)
```

```{r}
#| echo: true
cropscan::trial_marker
```

```{r}
#| fig-width: 20
cropscan::trial_marker |> 
  pivot_longer(-gen) |> 
  ggplot(aes(name, gen)) +
  geom_tile(aes(fill = factor(value))) +
  labs(fill = "Value", x = "", y = "") +
  theme(axis.text = element_blank()) +
  scale_fill_manual(values = c("#A4193D", "black", "#FFDFB9"))
```

## Genomic relationship matrix 

- Suppose $\mathbf{M}$ is the $G\times M$ marker matrix.
- We can let $\boldsymbol{u}_{a'} = \mathbf{M}\boldsymbol{\alpha}$ where $\boldsymbol{\alpha}$ is the $M\times 1$ marker effects.
- If we assume that $\boldsymbol{\alpha} \sim N(\boldsymbol{0}, \sigma^2_m\mathbf{I}_M)$ then $\boldsymbol{u}_{a'} \sim N(\boldsymbol{0}, \sigma^2_m\mathbf{M}\mathbf{M}^\top)$.
- We refer $\mathbf{K} = \mathbf{M}\mathbf{M}^\top$ as the **genomic relationship matrix**, analogous to the $\mathbf{A}$ matrix.

```{r}
#| echo: true
#| output: false
# may like to remove markers with zero variance or MAF < 0.05
M <- as.matrix(cropscan::trial_marker[, -1]) 
rownames(M) <- cropscan::trial_marker$gen
K <- tcrossprod(M)
attr(K, "INVERSE") <- FALSE
fit_grm <- asreml(yield ~ 1, 
                  random =~ vm(gen, K) + ide(gen), 
                  data = cropscan::trial_pheno)
```

## GRM vs NRM


```{r}
#| echo: true
#| output-location: column
#| fig-height: 8
ebv_grm <- tidy(fit_grm, "random") |> 
  filter(str_detect(term, "^vm[(]gen, K[)]")) |> 
  mutate(gen = str_remove(term, "^vm[(]gen, K[)]_")) |> 
  select(-term, grm = estimate, grm_sd = std.error)

ebv_nrm |> 
  rename(nrm = estimate, nrm_sd = std.error) |> 
  left_join(ebv_grm, by = "gen") |> 
  ggplot(aes(grm, nrm)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "grey") +
  labs(x = "EBV from GRM", y = "EBV from NRM")
```

## Combining marker and pedigree information

$$\boldsymbol{y} = \boldsymbol{1}_{RC}\cdot \mu + \mathbf{Z}_g\boldsymbol{u}_{a'} + \mathbf{Z}_g\boldsymbol{u}_a +   \mathbf{Z}_g\boldsymbol{u}_{\bar{a}} + \boldsymbol{e}$$
$$\begin{bmatrix}\boldsymbol{u}_{a'}\\\boldsymbol{u}_{a}\\\boldsymbol{u}_{\bar{a}}\\\boldsymbol{e}\end{bmatrix}\sim N\left(\begin{bmatrix}\boldsymbol{0}\\\boldsymbol{0}\\\boldsymbol{0}\\\boldsymbol{0}\end{bmatrix}, \begin{bmatrix}\sigma^2_m\mathbf{K} & \mathbf{0} & \mathbf{0} & \mathbf{0}\\\mathbf{0} & \sigma^2_a\mathbf{A} & \mathbf{0} & \mathbf{0}\\\mathbf{0}& \mathbf{0} &\sigma^2_{\bar{a}}\mathbf{I}_G & \mathbf{0}\\\mathbf{0} & \mathbf{0} & \mathbf{0} & \sigma^2\mathbf{I}_{RC}\end{bmatrix}\right)$$

```{r}
#| echo: true
#| output: false
fit_ngrm <- asreml(yield ~ 1, 
                   random =~ vm(gen, K) + vm(gen2, Ainv) + ide(gen), 
                   data = cropscan::trial_pheno |> 
                     mutate(gen2 = gen))
```

## Marker effects

```{r}
#| output: false
#| echo: true
meff <- meff(fit_ngrm, 
             mef = list(K = "M"), 
             effects =~ vm(gen, K))
```

- E-BLUP of $\boldsymbol{\alpha}$ (the marker effects)

```{r}
#| echo: true
meff$meff
```


## Key takeaways {background-color="#F5EDDE"}

- Fit a baseline model that take into account experimental design factors 
- Perform model selection and diagnosis to account for possible local trend, global trend and extraenous variation
- Use numerator relationship matrix or genomic relationship matrix to get estimated breeding values

